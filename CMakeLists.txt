cmake_minimum_required(VERSION 3.8.2)
project(fluffy VERSION 0.1.0)

#set(CMAKE_BUILD_TYPE Release)
#set(FLUFFY_ENV release)
set(CMAKE_BUILD_TYPE Debug)
set(FLUFFY_ENV debug)

set(FLUFFY_EXTERNAL_LIBS)
set(FLUFFY_INTERNAL_LIBS fluffy-utils fluffy-core fluffy-ecs)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/build)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_CURRENT_SOURCE_DIR}/build)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_CURRENT_SOURCE_DIR}/build)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO ${CMAKE_CURRENT_SOURCE_DIR}/build)

set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/build)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${CMAKE_CURRENT_SOURCE_DIR}/build)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${CMAKE_CURRENT_SOURCE_DIR}/build)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELWITHDEBINFO ${CMAKE_CURRENT_SOURCE_DIR}/build)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++14 -Wall -fPIC")

include_directories(${CMAKE_CURRENT_SOURCE_DIR}/extlibs/ChaiScript/include ${CMAKE_CURRENT_SOURCE_DIR}/extlibs/bandit)
add_subdirectory(src)

# Building libfluffy
add_library(fluffy SHARED ${CMAKE_CURRENT_SOURCE_DIR}/include/fluffy.hpp)
target_link_libraries(fluffy ${FLUFFY_EXTERNAL_LIBS} ${FLUFFY_INTERNAL_LIBS})

# Tests
add_subdirectory(tests)
